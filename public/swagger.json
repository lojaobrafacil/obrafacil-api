{
  "swagger": "2.0",
  "info": {
    "title": "Hubco API",
    "version": "200"
  },
  "paths": {
    "/banks": {
      "get": {
        "summary": "All a banks",
        "tags": [
          "Banks"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "description": "page number",
            "required": false
          },
          {
            "name": "per-page",
            "in": "query",
            "type": "string",
            "description": "itens per page",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "bank found",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "code": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a bank",
        "tags": [
          "Banks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "bank",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": "6191"
                },
                "name": {
                  "type": "string",
                  "example": "THE ROYAL BANK OF SCOTLAND PLC (FORMER RBS NV)"
                },
                "slug": {
                  "type": "string",
                  "example": "OTKRITIE SECURITIES LIMITED"
                },
                "description": {
                  "type": "string",
                  "example": "Qui illo dolorum. Labore itaque omnis. Omnis et minus."
                }
              },
              "required": [
                "code",
                "name"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "bank created"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/banks/{id}": {
      "get": {
        "summary": "Retrieves a bank",
        "tags": [
          "Banks"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "bank found",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "code": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "bank not found"
          }
        }
      },
      "put": {
        "summary": "Updates a bank",
        "tags": [
          "Banks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "bank",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": "7357"
                },
                "name": {
                  "type": "string",
                  "example": "THE ROYAL BANK OF SCOTLAND PLC (FORMER RBS NV)"
                },
                "slug": {
                  "type": "string",
                  "example": "ABN AMRO MEZZANINE (UK) LIMITED"
                },
                "description": {
                  "type": "string",
                  "example": "Natus provident vel. Et doloribus dolorem. Est porro iure."
                }
              },
              "required": [
                "code",
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "bank updated"
          },
          "422": {
            "description": "invalid request"
          }
        }
      },
      "delete": {
        "summary": "Destroy a bank",
        "tags": [
          "Banks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "bank destroyed"
          },
          "404": {
            "description": "invalid request"
          }
        }
      }
    },
    "/cities": {
      "get": {
        "summary": "All a cities",
        "tags": [
          "Cities"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "description": "page number",
            "required": false
          },
          {
            "name": "per-page",
            "in": "query",
            "type": "string",
            "description": "itens per page",
            "required": false
          },
          {
            "name": "state_id",
            "in": "query",
            "type": "string",
            "description": "cities of state ...",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "city found",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "example": "Acrelândia"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cities/{id}": {
      "get": {
        "summary": "Retrieves a city",
        "tags": [
          "Cities"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "city found",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string",
                  "example": "Acrelândia"
                },
                "capital": {
                  "type": "boolean",
                  "example": false
                },
                "state": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "example": "Acre"
                    },
                    "acronym": {
                      "type": "string",
                      "example": "AC"
                    },
                    "region_id": {
                      "type": "integer"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2018-03-15T16:54:07.739Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2018-03-15T16:54:07.739Z"
                    }
                  }
                },
                "updated_at": {
                  "type": "string",
                  "example": "2018-03-15T16:54:07.552Z"
                },
                "created_at": {
                  "type": "string",
                  "example": "2018-03-15T16:54:07.552Z"
                }
              }
            }
          },
          "404": {
            "description": "city not found"
          }
        }
      }
    },
    "/commissions": {
      "get": {
        "summary": "All a commissions",
        "tags": [
          "Commissions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "description": "page number",
            "required": false
          },
          {
            "name": "per-page",
            "in": "query",
            "type": "string",
            "description": "itens per page",
            "required": false
          },
          {
            "name": "partner_id",
            "in": "query",
            "type": "string",
            "description": "itens per page",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "commission found",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "order_id": {
                    "type": "integer"
                  },
                  "order_date": {
                    "type": "string"
                  },
                  "client_name": {
                    "type": "string"
                  },
                  "order_price": {
                    "type": "string"
                  },
                  "return_price": {
                    "type": "string"
                  },
                  "points": {
                    "type": "integer"
                  },
                  "percent_date": {
                    "type": "string"
                  },
                  "percent": {
                    "type": "string"
                  },
                  "percent_value": {
                    "type": "string"
                  },
                  "sent_date": {
                    "type": "string"
                  },
                  "partner_id": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "422": {
            "description": "partner_id is required"
          }
        }
      },
      "post": {
        "summary": "Creates a commission",
        "tags": [
          "Commissions"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "commission",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "order_id": {
                  "type": "string",
                  "example": 1
                },
                "order_date": {
                  "type": "string",
                  "example": "1984-11-19"
                },
                "client_name": {
                  "type": "string",
                  "example": "Emanuelly Ximenes"
                },
                "order_price": {
                  "type": "string",
                  "example": ".02"
                },
                "return_price": {
                  "type": "string",
                  "example": ".01"
                },
                "points": {
                  "type": "string",
                  "example": "526"
                },
                "percent_date": {
                  "type": "string",
                  "example": "1968-04-09"
                },
                "percent": {
                  "type": "string",
                  "example": ".02"
                },
                "percent_value": {
                  "type": "string",
                  "example": ".03"
                },
                "sent_date": {
                  "type": "string",
                  "example": "1975-06-27"
                },
                "partner_id": {
                  "type": "string",
                  "example": 1
                }
              },
              "required": [
                "partner_id"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "commission created"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/commissions/by_year/{partner_id}/{year}": {
      "get": {
        "summary": "retrives a commissions by year of partner",
        "tags": [
          "Commissions"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "partner_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "year",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "commission found",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "order_id": {
                    "type": "integer"
                  },
                  "order_date": {
                    "type": "string"
                  },
                  "client_name": {
                    "type": "string"
                  },
                  "order_price": {
                    "type": "string"
                  },
                  "return_price": {
                    "type": "string"
                  },
                  "points": {
                    "type": "integer"
                  },
                  "percent_date": {
                    "type": "string"
                  },
                  "percent": {
                    "type": "string"
                  },
                  "percent_value": {
                    "type": "string"
                  },
                  "sent_date": {
                    "type": "string"
                  },
                  "partner_id": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/commissions/consolidated_by_year/{year}": {
      "get": {
        "summary": "retrives a commissions consolidated by year",
        "tags": [
          "Commissions"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "year",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "commission found",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "nome_parceiro": {
                    "type": "string"
                  },
                  "janeiro": {
                    "type": "string"
                  },
                  "fevereiro": {
                    "type": "string"
                  },
                  "marco": {
                    "type": "string"
                  },
                  "abril": {
                    "type": "string"
                  },
                  "maio": {
                    "type": "string"
                  },
                  "junho": {
                    "type": "string"
                  },
                  "julho": {
                    "type": "string"
                  },
                  "agosto": {
                    "type": "string"
                  },
                  "setembro": {
                    "type": "string"
                  },
                  "outubro": {
                    "type": "string"
                  },
                  "novembro": {
                    "type": "string"
                  },
                  "dezembro": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/commissions/{id}": {
      "put": {
        "summary": "Updates a commission",
        "tags": [
          "Commissions"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "commission",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "order_id": {
                  "type": "integer",
                  "example": 1
                },
                "order_date": {
                  "type": "string",
                  "example": "1989-05-31"
                },
                "client_name": {
                  "type": "string",
                  "example": "João Luca Albuquerque Filho"
                },
                "order_price": {
                  "type": "string",
                  "example": ".05"
                },
                "return_price": {
                  "type": "string",
                  "example": ".01"
                },
                "points": {
                  "type": "string",
                  "example": "920"
                },
                "percent_date": {
                  "type": "string",
                  "example": "1975-01-17"
                },
                "percent": {
                  "type": "string",
                  "example": ".03"
                },
                "percent_value": {
                  "type": "string",
                  "example": ".09"
                },
                "sent_date": {
                  "type": "string",
                  "example": "1983-02-02"
                },
                "partner_id": {
                  "type": "integer",
                  "example": 1
                }
              },
              "required": [
                "partner_id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "commission updated"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "invalid request"
          }
        }
      },
      "delete": {
        "summary": "Destroy a commission",
        "tags": [
          "Commissions"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "commission destroyed"
          },
          "404": {
            "description": "invalid request"
          }
        }
      }
    },
    "/commissions/destroy_all/{partner_id}": {
      "delete": {
        "summary": "Destroy a commission",
        "tags": [
          "Commissions"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "partner_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "commission destroyed"
          },
          "422": {
            "description": "partner_id is required"
          }
        }
      }
    },
    "/companies": {
      "get": {
        "summary": "All a companies",
        "tags": [
          "Companies"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "description": "page number",
            "required": false
          },
          {
            "name": "per-page",
            "in": "query",
            "type": "string",
            "description": "itens per page",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "company found",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "fantaty_name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a company",
        "tags": [
          "Companies"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "company",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Ian da Mata"
                },
                "fantasy_name": {
                  "type": "string",
                  "example": "João Victor Bulhões"
                },
                "federal_registration": {
                  "type": "string",
                  "example": "510373118-5"
                },
                "state_registration": {
                  "type": "string",
                  "example": "793009003-5"
                },
                "invoice_save": {
                  "type": "string",
                  "example": "503921195-3"
                },
                "invouce_return": {
                  "type": "string",
                  "example": "452446445-X"
                },
                "pis_percent": {
                  "type": "string",
                  "example": "757870537-7"
                },
                "confins_percent": {
                  "type": "string",
                  "example": "394287553-5"
                },
                "icmsn_percent": {
                  "type": "string",
                  "example": "354815314-3"
                },
                "birth_date": {
                  "type": "string",
                  "example": "1979-04-21"
                },
                "tax_regime": {
                  "type": "string",
                  "example": "2042-11-25"
                },
                "description": {
                  "type": "string",
                  "example": "simple",
                  "description": "pode ser simple, normal ou presumed"
                }
              },
              "required": [
                "name",
                "federal_registration",
                "kind",
                "tax_regime"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "company created"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/companies/{id}": {
      "get": {
        "summary": "Retrieves a company",
        "tags": [
          "Companies"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "company found",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "fantasy_name": {
                  "type": "string"
                },
                "federal_registration": {
                  "type": "string"
                },
                "state_registration": {
                  "type": "string"
                },
                "invoice_save": {
                  "type": "string"
                },
                "invouce_return": {
                  "type": "string"
                },
                "pis_percent": {
                  "type": "integer"
                },
                "confins_percent": {
                  "type": "integer"
                },
                "icmsn_percent": {
                  "type": "integer"
                },
                "birth_date": {
                  "type": "string"
                },
                "tax_regime": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "addresses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "street": {
                        "type": "string"
                      },
                      "number": {
                        "type": "string"
                      },
                      "complement": {
                        "type": "string"
                      },
                      "neighborhood": {
                        "type": "string"
                      },
                      "zipcode": {
                        "type": "integer"
                      },
                      "ibge": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "address_type_id": {
                        "type": "integer"
                      },
                      "address_type_name": {
                        "type": "string"
                      },
                      "city_id": {
                        "type": "integer"
                      },
                      "city_name": {
                        "type": "string"
                      },
                      "state_id": {
                        "type": "integer"
                      },
                      "state_name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "phones": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "contact": {
                        "type": "string"
                      },
                      "phone_type_id": {
                        "type": "integer"
                      },
                      "phone_type_name": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      }
                    }
                  }
                },
                "emails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "email": {
                        "type": "string"
                      },
                      "contact": {
                        "type": "string"
                      },
                      "email_type_id": {
                        "type": "integer"
                      },
                      "email_type_name": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "company not found"
          }
        }
      },
      "put": {
        "summary": "Updates a company",
        "tags": [
          "Companies"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "company",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Srta. Sílvia Martins"
                },
                "fantasy_name": {
                  "type": "string",
                  "example": "Sara Gomes Jr."
                },
                "federal_registration": {
                  "type": "string",
                  "example": "735513290-3"
                },
                "state_registration": {
                  "type": "string",
                  "example": "229497099-3"
                },
                "invoice_save": {
                  "type": "string",
                  "example": "388119756-7"
                },
                "invouce_return": {
                  "type": "string",
                  "example": "905901500-2"
                },
                "pis_percent": {
                  "type": "string",
                  "example": "945090101-5"
                },
                "confins_percent": {
                  "type": "string",
                  "example": "406823784-0"
                },
                "icmsn_percent": {
                  "type": "string",
                  "example": "210770427-9"
                },
                "birth_date": {
                  "type": "string",
                  "example": "1956-12-10"
                },
                "tax_regime": {
                  "type": "string",
                  "example": "2024-12-03"
                },
                "description": {
                  "type": "string",
                  "example": "simple",
                  "description": "pode ser simple, normal ou presumed"
                }
              },
              "required": [
                "name",
                "federal_registration",
                "kind",
                "tax_regime"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "company updated"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "invalid request"
          }
        }
      },
      "delete": {
        "summary": "Destroy a company",
        "tags": [
          "Companies"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "company destroyed"
          },
          "404": {
            "description": "invalid request"
          }
        }
      }
    },
    "/partners": {
      "get": {
        "summary": "All a partners",
        "tags": [
          "Partners"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "description": "page number",
            "required": false
          },
          {
            "name": "per-page",
            "in": "query",
            "type": "string",
            "description": "itens per page",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "partner found",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "federal_registration": {
                    "type": "string"
                  },
                  "state_registration": {
                    "type": "string"
                  },
                  "active": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "string"
                  },
                  "cash_redemption": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a partner",
        "tags": [
          "Partners"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "partner",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Rafael Meireles"
                },
                "federal_registration": {
                  "type": "string",
                  "example": "257602196-4"
                },
                "state_registration": {
                  "type": "string",
                  "example": "289796800-1"
                },
                "kind": {
                  "type": "string",
                  "example": "physical or legal"
                },
                "active": {
                  "type": "boolean"
                },
                "started_date": {
                  "type": "string",
                  "example": "2000-03-26"
                },
                "renewal_date": {
                  "type": "string",
                  "example": "2032-05-20"
                },
                "description": {
                  "type": "string",
                  "example": "Aliquid officia voluptatem. Qui eum facere. Ut sunt odio."
                },
                "origin": {
                  "type": "string",
                  "example": "shop, internet, relationship or nivaldo"
                },
                "percent": {
                  "type": "string",
                  "example": ".09"
                },
                "agency": {
                  "type": "string",
                  "example": "7455"
                },
                "account": {
                  "type": "string",
                  "example": "7365895"
                },
                "favored": {
                  "type": "string",
                  "example": "Salvador Aguiar"
                },
                "bank_id": {
                  "type": "integer"
                },
                "ocupation": {
                  "type": "string",
                  "example": "Educação"
                },
                "cash_redemption": {
                  "type": "string",
                  "example": "true, false or maybe"
                },
                "partner_group_id": {
                  "type": "integer"
                },
                "addresses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "street": {
                        "type": "string",
                        "example": "Marginal Erick Sales"
                      },
                      "number": {
                        "type": "string",
                        "example": "Marginal Yasmin"
                      },
                      "complement": {
                        "type": "string",
                        "example": "73246006"
                      },
                      "neighborhood": {
                        "type": "string",
                        "example": "86460517"
                      },
                      "zipcode": {
                        "type": "integer",
                        "example": "6480"
                      },
                      "ibge": {
                        "type": "string",
                        "example": "388"
                      },
                      "description": {
                        "type": "string",
                        "example": "Dolor provident ea. Non minus ea. Eaque corrupti cumque."
                      },
                      "address_type_id": {
                        "type": "integer"
                      },
                      "city_id": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "phones": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "phone": {
                        "type": "string",
                        "example": "(92) 2892-9900"
                      },
                      "contact": {
                        "type": "string",
                        "example": "Valentina Jaques"
                      },
                      "phone_type_id": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "emails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "example": "keeleyebert@gerlach.biz"
                      },
                      "contact": {
                        "type": "string",
                        "example": "Yasmin Álvares Neto"
                      },
                      "email_type_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "required": [
                "name",
                "federal_registration",
                "kind"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "partner created"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/partners/{id}": {
      "get": {
        "summary": "Retrieves a partner",
        "tags": [
          "Partners"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "partner found",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "federal_registration": {
                  "type": "string"
                },
                "state_registration": {
                  "type": "string"
                },
                "kind": {
                  "type": "string"
                },
                "active": {
                  "type": "boolean"
                },
                "started_date": {
                  "type": "string"
                },
                "renewal_date": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "origin": {
                  "type": "string"
                },
                "percent": {
                  "type": "integer"
                },
                "agency": {
                  "type": "string"
                },
                "account": {
                  "type": "string"
                },
                "favored": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "integer"
                },
                "ocupation": {
                  "type": "string"
                },
                "partner_group": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "email": {
                      "type": "string"
                    },
                    "federal_registration": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "partner_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "client_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  }
                },
                "discount3": {
                  "type": "string",
                  "x-nullable": true
                },
                "discount5": {
                  "type": "string",
                  "x-nullable": true
                },
                "discount8": {
                  "type": "string",
                  "x-nullable": true
                },
                "cash_redemption": {
                  "type": "string",
                  "x-nullable": true
                },
                "updated_at": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "addresses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "street": {
                        "type": "string"
                      },
                      "number": {
                        "type": "string"
                      },
                      "complement": {
                        "type": "string"
                      },
                      "neighborhood": {
                        "type": "string"
                      },
                      "zipcode": {
                        "type": "integer"
                      },
                      "ibge": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "address_type_id": {
                        "type": "integer"
                      },
                      "address_type_name": {
                        "type": "string"
                      },
                      "city_id": {
                        "type": "integer"
                      },
                      "city_name": {
                        "type": "string"
                      },
                      "state_id": {
                        "type": "integer"
                      },
                      "state_name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "phones": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "contact": {
                        "type": "string"
                      },
                      "phone_type_id": {
                        "type": "integer"
                      },
                      "phone_type_name": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      }
                    }
                  }
                },
                "emails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "email": {
                        "type": "string"
                      },
                      "contact": {
                        "type": "string"
                      },
                      "email_type_id": {
                        "type": "integer"
                      },
                      "email_type_name": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "partner not found"
          }
        }
      },
      "put": {
        "summary": "Updates a partner",
        "tags": [
          "Partners"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "partner",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Dra. Olívia Mendes"
                },
                "federal_registration": {
                  "type": "string",
                  "example": "991174874-X"
                },
                "state_registration": {
                  "type": "string",
                  "example": "635797527-3"
                },
                "kind": {
                  "type": "string",
                  "example": "physical or legal"
                },
                "active": {
                  "type": "boolean"
                },
                "started_date": {
                  "type": "string",
                  "example": "1985-11-30"
                },
                "renewal_date": {
                  "type": "string",
                  "example": "2020-08-01"
                },
                "description": {
                  "type": "string",
                  "example": "Aut vel dolores. Explicabo est non. Odit corrupti est."
                },
                "origin": {
                  "type": "string",
                  "example": "shop, internet, relationship or nivaldo"
                },
                "percent": {
                  "type": "string",
                  "example": ".05"
                },
                "agency": {
                  "type": "string",
                  "example": "7140"
                },
                "account": {
                  "type": "string",
                  "example": "9981820"
                },
                "favored": {
                  "type": "string",
                  "example": "João Luca Carreira Neto"
                },
                "bank_id": {
                  "type": "integer"
                },
                "ocupation": {
                  "type": "string",
                  "example": "Educação"
                },
                "cash_redemption": {
                  "type": "string",
                  "example": "true, false or maybe"
                },
                "partner_group_id": {
                  "type": "integer"
                },
                "addresses": {
                  "type": "object",
                  "properties": {
                    "street": {
                      "type": "string",
                      "example": "Marginal João Pedro"
                    },
                    "number": {
                      "type": "string",
                      "example": "Rua Joaquim Campos"
                    },
                    "complement": {
                      "type": "string",
                      "example": "64385799"
                    },
                    "neighborhood": {
                      "type": "string",
                      "example": "10877671"
                    },
                    "zipcode": {
                      "type": "integer",
                      "example": "6668"
                    },
                    "ibge": {
                      "type": "string",
                      "example": "62700"
                    },
                    "description": {
                      "type": "string",
                      "example": "Illum deserunt repellat. Consequatur fugiat nulla. Id aliquam omnis."
                    },
                    "address_type_id": {
                      "type": "integer"
                    },
                    "city_id": {
                      "type": "integer"
                    }
                  }
                },
                "phones": {
                  "type": "object",
                  "properties": {
                    "phone": {
                      "type": "string",
                      "example": "(91) 5914-2696"
                    },
                    "contact": {
                      "type": "string",
                      "example": "Sr. Enzo Gabriel Cabreira"
                    },
                    "phone_type_id": {
                      "type": "integer"
                    }
                  }
                },
                "emails": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "latosha@maggio.info"
                    },
                    "contact": {
                      "type": "string",
                      "example": "Malu Rocha"
                    },
                    "email_type_id": {
                      "type": "integer"
                    }
                  }
                }
              },
              "required": [
                "name",
                "federal_registration",
                "kind"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "partner updated"
          },
          "422": {
            "description": "invalid request"
          }
        }
      },
      "delete": {
        "summary": "Destroy a partner",
        "tags": [
          "Partners"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "partner destroyed"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pi_vouchers": {
      "get": {
        "summary": "All a pi_vouchers",
        "tags": [
          "PiVouchers"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "description": "page number",
            "required": false
          },
          {
            "name": "per-page",
            "in": "query",
            "type": "string",
            "description": "itens per page",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Premio ideal voucher found",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "expiration_date": {
                    "type": "string"
                  },
                  "value": {
                    "type": "float"
                  },
                  "used_at": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "received_at": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "company": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "partner": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a pi_voucher",
        "tags": [
          "PiVouchers"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "pi_voucher",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "used, active or inactive"
                },
                "received_at": {
                  "type": "string",
                  "example": "1975-03-10"
                },
                "used_at": {
                  "type": "string",
                  "example": "2019-03-29"
                },
                "value": {
                  "type": "string",
                  "example": "7591"
                },
                "company_id": {
                  "type": "integer"
                },
                "partner_id": {
                  "type": "integer"
                }
              },
              "required": [
                "value",
                "partner_id"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Premio ideal voucher created"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/pi_vouchers/{id}": {
      "get": {
        "summary": "Retrieves a pi_voucher",
        "tags": [
          "PiVouchers"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Premio ideal voucher found",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "expiration_date": {
                  "type": "string"
                },
                "value": {
                  "type": "float"
                },
                "used_at": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "received_at": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "company": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "partner": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Premio ideal voucher not found"
          }
        }
      }
    },
    "/pi_vouchers/{id}/inactivate": {
      "put": {
        "summary": "inactivate a pi_voucher",
        "tags": [
          "PiVouchers"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Premio ideal voucher inactivated"
          },
          "422": {
            "description": "voucher is already inactive"
          }
        }
      }
    },
    "/pi_vouchers/{id}/used": {
      "put": {
        "summary": "used a pi_voucher",
        "tags": [
          "PiVouchers"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          }
        ],
        "responses": {
          "200": {
            "description": "Premio ideal voucher used"
          },
          "422": {
            "description": "voucher is already used"
          }
        }
      }
    },
    "/pi_vouchers/{id}/received": {
      "put": {
        "summary": "received a pi_voucher",
        "tags": [
          "PiVouchers"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          }
        ],
        "responses": {
          "200": {
            "description": "Premio ideal voucher received"
          },
          "422": {
            "description": "voucher is already received"
          }
        }
      }
    },
    "/pi_vouchers/{id}/send_email": {
      "post": {
        "summary": "send email a partner",
        "tags": [
          "PiVouchers"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          }
        ],
        "responses": {
          "200": {
            "description": "Email will be sent by background job"
          },
          "422": {
            "description": "voucher is inactive or used"
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "All a products",
        "tags": [
          "Products"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "description": "page number",
            "required": false
          },
          {
            "name": "per-page",
            "in": "query",
            "type": "string",
            "description": "itens per page",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "product found",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "active": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a product",
        "tags": [
          "Products"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "product",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Awesome Wool Table"
                },
                "description": {
                  "type": "string",
                  "example": "Cotton"
                },
                "ncm": {
                  "type": "string",
                  "example": "37.07"
                },
                "icms": {
                  "type": "string",
                  "example": "48.06"
                },
                "ipi": {
                  "type": "string",
                  "example": "53.07"
                },
                "cest": {
                  "type": "string",
                  "example": "48.05"
                },
                "bar_code": {
                  "type": "string",
                  "example": "7894916512510"
                },
                "reduction": {
                  "type": "string",
                  "example": "93.03"
                },
                "weight": {
                  "type": "string",
                  "example": "43.08"
                },
                "height": {
                  "type": "string",
                  "example": "86.07"
                },
                "width": {
                  "type": "string",
                  "example": "19.02"
                },
                "length": {
                  "type": "string",
                  "example": "95.08"
                },
                "kind": {
                  "type": "string",
                  "example": "third_party",
                  "description": "pode ser own, third_party ou not_marketed"
                },
                "active": {
                  "type": "string",
                  "example": true
                },
                "unit_id": {
                  "type": "string",
                  "example": 11
                },
                "sku": {
                  "type": "string",
                  "example": "123456"
                },
                "sku_xml": {
                  "type": "string",
                  "example": "123456"
                },
                "sub_category_id": {
                  "type": "string",
                  "example": 1
                },
                "supplier_id": {
                  "type": "string",
                  "example": 1
                }
              },
              "required": [
                "name",
                "kind"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "product created"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Retrieves a product",
        "tags": [
          "Products"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "product found",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "Rustic Wool Watch"
                },
                "description": {
                  "type": "string",
                  "example": "Iron"
                },
                "ncm": {
                  "type": "integer",
                  "example": "51.06"
                },
                "icms": {
                  "type": "number",
                  "example": "36.06"
                },
                "ipi": {
                  "type": "number",
                  "example": "67.02"
                },
                "cest": {
                  "type": "number",
                  "example": "89.05"
                },
                "bar_code": {
                  "type": "string",
                  "example": "7894916512510"
                },
                "reduction": {
                  "type": "number",
                  "example": "74.05"
                },
                "weight": {
                  "type": "number",
                  "example": "11.01"
                },
                "height": {
                  "type": "number",
                  "example": "41.06"
                },
                "width": {
                  "type": "number",
                  "example": "51.04"
                },
                "length": {
                  "type": "number",
                  "example": "65.02"
                },
                "kind": {
                  "type": "string",
                  "example": "third_party",
                  "description": "pode ser own, third_party ou not_marketed"
                },
                "active": {
                  "type": "boolean",
                  "example": true
                },
                "unit_id": {
                  "type": "integer",
                  "example": 11
                },
                "unit_name": {
                  "type": "string",
                  "example": "DZ"
                },
                "sku": {
                  "type": "string",
                  "example": "123456"
                },
                "sku_xml": {
                  "type": "string",
                  "example": "123456"
                },
                "sub_category_id": {
                  "type": "integer",
                  "example": 1
                },
                "sub_category_name": {
                  "type": "string",
                  "example": "consequuntur"
                },
                "supplier_id": {
                  "type": "integer",
                  "example": 1
                },
                "supplier_name": {
                  "type": "string",
                  "example": "Brites LTDA"
                },
                "supplier_fantasy_name": {
                  "type": "string",
                  "example": "Brites"
                },
                "category_id": {
                  "type": "integer",
                  "example": 1
                },
                "category_name": {
                  "type": "string",
                  "example": "ex"
                },
                "company_products": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "code": {
                        "type": "string",
                        "example": 111,
                        "description": "Codigo interno da FogoesShop/ObraFacil"
                      },
                      "stock": {
                        "type": "string",
                        "example": 0.0
                      },
                      "stock_min": {
                        "type": "string",
                        "example": 0.0
                      },
                      "stock_max": {
                        "type": "string",
                        "example": 0.0
                      },
                      "cost": {
                        "type": "string"
                      },
                      "discount": {
                        "type": "string"
                      },
                      "st": {
                        "type": "string"
                      },
                      "margin": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "product not found"
          }
        }
      },
      "put": {
        "summary": "Updates a product",
        "tags": [
          "Products"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "product",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string",
                  "example": "Heavy Duty Copper Keyboard"
                },
                "description": {
                  "type": "string",
                  "example": "Cotton"
                },
                "ncm": {
                  "type": "float",
                  "example": "36.06"
                },
                "icms": {
                  "type": "float",
                  "example": "13.04"
                },
                "ipi": {
                  "type": "float",
                  "example": "50.02"
                },
                "cest": {
                  "type": "float",
                  "example": "31.02"
                },
                "color": {
                  "type": "string",
                  "example": "#24bd65"
                },
                "bar_code": {
                  "type": "string",
                  "example": "7894916512510"
                },
                "reduction": {
                  "type": "string",
                  "example": "22.03"
                },
                "weight": {
                  "type": "float",
                  "example": "45.07"
                },
                "height": {
                  "type": "float",
                  "example": "77.03"
                },
                "width": {
                  "type": "float",
                  "example": "91.07"
                },
                "length": {
                  "type": "float",
                  "example": "55.03"
                },
                "kind": {
                  "type": "string",
                  "example": "third_party",
                  "description": "pode ser own, third_party ou not_marketed"
                },
                "active": {
                  "type": "string",
                  "example": true
                },
                "unit_id": {
                  "type": "integer",
                  "example": 11
                },
                "sku": {
                  "type": "string",
                  "example": "123456"
                },
                "sku_xml": {
                  "type": "string",
                  "example": "123456"
                },
                "sub_category_id": {
                  "type": "integer",
                  "example": 1
                },
                "supplier_id": {
                  "type": "integer",
                  "example": 1
                },
                "company_products": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "code": {
                        "type": "string",
                        "example": 111,
                        "description": "Codigo interno da FogoesShop/ObraFacil"
                      },
                      "stock": {
                        "type": "integer",
                        "example": 0.0
                      },
                      "stock_min": {
                        "type": "integer",
                        "example": 0.0
                      },
                      "stock_max": {
                        "type": "integer",
                        "example": 0.0
                      },
                      "cost": {
                        "type": "float"
                      },
                      "discount": {
                        "type": "float"
                      },
                      "st": {
                        "type": "string"
                      },
                      "margin": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              },
              "required": [
                "name",
                "kind"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "product updated"
          },
          "404": {
            "description": "invalid request"
          },
          "422": {
            "description": "invalid request"
          }
        }
      },
      "delete": {
        "summary": "Destroy a product",
        "tags": [
          "Products"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "product destroyed"
          },
          "404": {
            "description": "invalid request"
          }
        }
      }
    },
    "/regions": {
      "get": {
        "summary": "All a regions",
        "tags": [
          "Regions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "description": "page number",
            "required": false
          },
          {
            "name": "per-page",
            "in": "query",
            "type": "string",
            "description": "itens per page",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "region found",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "Norte"
                  },
                  "updated_at": {
                    "type": "string",
                    "example": "2018-03-15T16:54:07.552Z"
                  },
                  "created_at": {
                    "type": "string",
                    "example": "2018-03-15T16:54:07.552Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/regions/{id}": {
      "get": {
        "summary": "Retrieves a region",
        "tags": [
          "Regions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "region found",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "Norte"
                },
                "updated_at": {
                  "type": "string",
                  "example": "2018-03-15T16:54:07.552Z"
                },
                "created_at": {
                  "type": "string",
                  "example": "2018-03-15T16:54:07.552Z"
                }
              }
            }
          },
          "404": {
            "description": "region not found"
          }
        }
      }
    },
    "/states": {
      "get": {
        "summary": "All a states",
        "tags": [
          "States"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "description": "page number",
            "required": false
          },
          {
            "name": "per-page",
            "in": "query",
            "type": "string",
            "description": "itens per page",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "state found",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "Acre"
                  },
                  "acronym": {
                    "type": "string",
                    "example": "AC"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/states/{id}": {
      "get": {
        "summary": "Retrieves a state",
        "tags": [
          "States"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "state found",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "Acre"
                },
                "acronym": {
                  "type": "string",
                  "example": "AC"
                },
                "region": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "example": "Norte"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2018-03-15T16:54:07.739Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2018-03-15T16:54:07.739Z"
                    }
                  }
                },
                "updated_at": {
                  "type": "string",
                  "example": "2018-03-15T16:54:07.552Z"
                },
                "created_at": {
                  "type": "string",
                  "example": "2018-03-15T16:54:07.552Z"
                }
              }
            }
          },
          "404": {
            "description": "state not found"
          }
        }
      }
    },
    "/suppliers": {
      "get": {
        "summary": "All a suppliers",
        "tags": [
          "Suppliers"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "description": "page number",
            "required": false
          },
          {
            "name": "per-page",
            "in": "query",
            "type": "string",
            "description": "itens per page",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "supplier found",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "fantaty_name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a supplier",
        "tags": [
          "Suppliers"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "supplier",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Sra. Vitor Espinhosa"
                },
                "fantasy_name": {
                  "type": "string",
                  "example": "Srta. Lucas Gabriel Dantas"
                },
                "federal_registration": {
                  "type": "string",
                  "example": "703050180-2"
                },
                "state_registration": {
                  "type": "string",
                  "example": "341880550-7"
                },
                "kind": {
                  "type": "string",
                  "example": "physical",
                  "description": "physical or legal"
                },
                "birth_date": {
                  "type": "string",
                  "example": "1987-04-06"
                },
                "tax_regime": {
                  "type": "string",
                  "example": "2021-09-11"
                },
                "description": {
                  "type": "string",
                  "example": "simple",
                  "description": "pode ser simple, normal ou presumed"
                },
                "billing_type_id": {
                  "type": "integer"
                },
                "addresses": {
                  "type": "object",
                  "properties": {
                    "street": {
                      "type": "string",
                      "example": "Ponte Aline Coqueiro"
                    },
                    "number": {
                      "type": "string",
                      "example": "Viela Marina Garcês"
                    },
                    "complement": {
                      "type": "string",
                      "example": "77386782"
                    },
                    "neighborhood": {
                      "type": "string",
                      "example": "51885802"
                    },
                    "zipcode": {
                      "type": "integer",
                      "example": "4226"
                    },
                    "ibge": {
                      "type": "string",
                      "example": "8548"
                    },
                    "description": {
                      "type": "string",
                      "example": "Non et ut. Eum recusandae qui. Blanditiis nobis in."
                    },
                    "address_type_id": {
                      "type": "integer",
                      "description": "outros é 4"
                    },
                    "city_id": {
                      "type": "integer",
                      "description": "são paulo é 5351"
                    }
                  },
                  "required": [
                    "street",
                    "zipcode"
                  ]
                },
                "phones": {
                  "type": "object",
                  "properties": {
                    "phone": {
                      "type": "string",
                      "example": "(95) 5040-6149"
                    },
                    "contact": {
                      "type": "string",
                      "example": "Maria Luiza Bentes Neto"
                    },
                    "phone_type_id": {
                      "type": "integer",
                      "description": "outros é 4"
                    }
                  },
                  "required": [
                    "phone",
                    "phone_type_id"
                  ]
                },
                "emails": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "karrie@haagmohr.biz"
                    },
                    "contact": {
                      "type": "string",
                      "example": "João Sales Jr."
                    },
                    "email_type_id": {
                      "type": "integer",
                      "description": "outros é 4"
                    }
                  },
                  "required": [
                    "email",
                    "email_type_id"
                  ]
                }
              },
              "required": [
                "name",
                "federal_registration",
                "kind",
                "tax_regime"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "supplier created"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/suppliers/{id}": {
      "get": {
        "summary": "Retrieves a supplier",
        "tags": [
          "Suppliers"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "supplier found",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "fantasy_name": {
                  "type": "string"
                },
                "federal_registration": {
                  "type": "string"
                },
                "state_registration": {
                  "type": "string"
                },
                "kind": {
                  "type": "string",
                  "x-nullable": true
                },
                "birth_date": {
                  "type": "string"
                },
                "tax_regime": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "billing_type_id": {
                  "type": "integer"
                },
                "updated_at": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "addresses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "street": {
                        "type": "string"
                      },
                      "number": {
                        "type": "string"
                      },
                      "complement": {
                        "type": "string"
                      },
                      "neighborhood": {
                        "type": "string"
                      },
                      "zipcode": {
                        "type": "integer"
                      },
                      "ibge": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "address_type_id": {
                        "type": "integer"
                      },
                      "address_type_name": {
                        "type": "string"
                      },
                      "city_id": {
                        "type": "integer"
                      },
                      "city_name": {
                        "type": "string"
                      },
                      "state_id": {
                        "type": "integer"
                      },
                      "state_name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "phones": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "contact": {
                        "type": "string"
                      },
                      "phone_type_id": {
                        "type": "integer"
                      },
                      "phone_type_name": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      }
                    }
                  }
                },
                "emails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "email": {
                        "type": "string"
                      },
                      "contact": {
                        "type": "string"
                      },
                      "email_type_id": {
                        "type": "integer"
                      },
                      "email_type_name": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "supplier not found"
          }
        }
      },
      "put": {
        "summary": "Updates a supplier",
        "tags": [
          "Suppliers"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "supplier",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Henry da Mota"
                },
                "fantasy_name": {
                  "type": "string",
                  "example": "Karla Teles"
                },
                "federal_registration": {
                  "type": "string",
                  "example": "161619894-X"
                },
                "state_registration": {
                  "type": "string",
                  "example": "736668476-7"
                },
                "kind": {
                  "type": "string",
                  "example": "physical",
                  "description": "physical or legal"
                },
                "birth_date": {
                  "type": "string",
                  "example": "1999-02-08"
                },
                "tax_regime": {
                  "type": "string",
                  "example": "2046-04-07"
                },
                "description": {
                  "type": "string",
                  "example": "simple",
                  "description": "pode ser simple, normal ou presumed"
                },
                "billing_type_id": {
                  "type": "integer"
                },
                "addresses": {
                  "type": "object",
                  "properties": {
                    "street": {
                      "type": "string",
                      "example": "Ponte Ian Rebouças"
                    },
                    "number": {
                      "type": "string",
                      "example": "Travessa Ana"
                    },
                    "complement": {
                      "type": "string",
                      "example": "93323261"
                    },
                    "neighborhood": {
                      "type": "string",
                      "example": "34320310"
                    },
                    "zipcode": {
                      "type": "integer",
                      "example": "7949"
                    },
                    "ibge": {
                      "type": "string",
                      "example": "141"
                    },
                    "description": {
                      "type": "string",
                      "example": "Corrupti omnis voluptatum. Quia odit asperiores. Ullam sed nihil."
                    },
                    "address_type_id": {
                      "type": "integer",
                      "description": "outros é 4"
                    },
                    "city_id": {
                      "type": "integer",
                      "description": "são paulo é 5351"
                    }
                  },
                  "required": [
                    "street",
                    "zipcode"
                  ]
                },
                "phones": {
                  "type": "object",
                  "properties": {
                    "phone": {
                      "type": "string",
                      "example": "(75) 3813-8117"
                    },
                    "contact": {
                      "type": "string",
                      "example": "Davi Lucas Rodrigues"
                    },
                    "phone_type_id": {
                      "type": "integer",
                      "description": "outros é 4"
                    }
                  },
                  "required": [
                    "phone",
                    "phone_type_id"
                  ]
                },
                "emails": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "trey@kuhlman.com"
                    },
                    "contact": {
                      "type": "string",
                      "example": "Srta. Djalma Albuquerque"
                    },
                    "email_type_id": {
                      "type": "integer",
                      "description": "outros é 4"
                    }
                  },
                  "required": [
                    "email",
                    "email_type_id"
                  ]
                }
              },
              "required": [
                "name",
                "federal_registration",
                "kind",
                "tax_regime"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "supplier updated"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "invalid request"
          }
        }
      },
      "delete": {
        "summary": "Destroy a supplier",
        "tags": [
          "Suppliers"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "supplier destroyed"
          },
          "404": {
            "description": "invalid request"
          }
        }
      }
    },
    "/units": {
      "get": {
        "summary": "All a units",
        "tags": [
          "Units"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "description": "page number",
            "required": false
          },
          {
            "name": "per-page",
            "in": "query",
            "type": "string",
            "description": "itens per page",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "unit found",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "m2"
                  },
                  "description": {
                    "type": "string",
                    "example": "Metro quadrado"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a unit",
        "tags": [
          "Units"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "unit",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "m2"
                },
                "description": {
                  "type": "string",
                  "example": "Metro quadrado"
                },
                "updated_at": {
                  "type": "string",
                  "example": "2018-03-15T16:54:07.552Z"
                },
                "created_at": {
                  "type": "string",
                  "example": "2018-03-15T16:54:07.552Z"
                }
              },
              "required": [
                "name",
                "description"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "unit created"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/units/{id}": {
      "get": {
        "summary": "Retrieves a unit",
        "tags": [
          "Units"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "unit found",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "m2"
                },
                "description": {
                  "type": "string",
                  "example": "Metro quadrado"
                },
                "updated_at": {
                  "type": "string",
                  "example": "2018-03-15T16:54:07.552Z"
                },
                "created_at": {
                  "type": "string",
                  "example": "2018-03-15T16:54:07.552Z"
                }
              }
            }
          },
          "404": {
            "description": "unit not found"
          }
        }
      },
      "put": {
        "summary": "Updates a unit",
        "tags": [
          "Units"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "unit",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "m2"
                },
                "description": {
                  "type": "string",
                  "example": "Metro quadrado"
                },
                "updated_at": {
                  "type": "string",
                  "example": "2018-03-15T16:54:07.552Z"
                },
                "created_at": {
                  "type": "string",
                  "example": "2018-03-15T16:54:07.552Z"
                }
              },
              "required": [
                "name",
                "description"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "unit updated"
          },
          "422": {
            "description": "invalid request"
          }
        }
      },
      "delete": {
        "summary": "Destroy a unit",
        "tags": [
          "Units"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_id",
            "in": "query",
            "type": "string",
            "description": "your-access-id"
          },
          {
            "name": "access_key",
            "in": "query",
            "type": "string",
            "description": "your-access-key"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "unit destroyed"
          },
          "404": {
            "description": "invalid request"
          }
        }
      }
    }
  }
}